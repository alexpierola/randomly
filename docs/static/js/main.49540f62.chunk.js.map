{"version":3,"sources":["assets/randomly.svg","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","deleteFromList","e","document","querySelector","removeChild","target","parentNode","rotateBtn","classList","toggle","className","onClick","list","div","createElement","add","input","type","placeholder","fas","addEventListener","appendChild","listBlocks","querySelectorAll","toRandomize","forEach","element","val","value","push","length","setTimeout","listElems","i","j","Math","floor","random","shuffle","elem","index","spanNum","innerText","spanText","id","App","role","aria-label","src","logo","alt","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.49540f62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/randomly.72b6d021.svg\";","import React from 'react';\n\nconst Home = () => {\n    const deleteFromList = (e) => {\n        document.querySelector('#list').removeChild(e.target.parentNode);\n    }\n\n    const addToList = () => {\n        const list = document.querySelector('#list');\n        let div = document.createElement('div');\n        div.classList.add('is-flex', 'in-container', 'mt-3');\n        let input = document.createElement('input');\n        input.type = 'text';\n        input.classList.add('input', 'inText');\n        input.placeholder = 'Type here';\n        let fas = document.createElement('i');\n        fas.classList.add('fas', 'fa-trash-alt', 'button', 'btn-delete');\n        fas.addEventListener('click', deleteFromList)\n        div.appendChild(input);\n        div.appendChild(fas);\n        list.appendChild(div);\n    }\n\n    function shuffle(listElems) {\n        for (let i = listElems.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [listElems[i], listElems[j]] = [listElems[j], listElems[i]];\n        }\n        return listElems;\n    }\n\n    const rotateBtn = () => {\n        document.querySelector('.btn-group').classList.toggle('is-hidden');\n        document.querySelector('.btn-redo').classList.toggle('is-hidden');\n    }\n\n    const rndList = () => {\n        const list = document.querySelector('#list');\n        const listBlocks = document.querySelectorAll('#list .in-container');\n        let toRandomize = [];\n        listBlocks.forEach(element => {\n            let val = element.querySelector('.inText').value;\n            if (val !== '') toRandomize.push(val);\n        });\n        debugger;\n        if (toRandomize.length === 0) return false;\n        listBlocks.forEach(element => {\n            element.classList.add('animate__animated', 'animate__fadeOutUp');\n        });\n        setTimeout(() => {\n            listBlocks.forEach(element => {\n                list.removeChild(element);\n            });\n            toRandomize = shuffle(toRandomize);\n            toRandomize.forEach((elem, index) => {\n                let div = document.createElement('div');\n                div.classList.add('is-flex', 'mt-3', 'end-elem', 'animate__fadeInDown', 'animate__animated');\n                let spanNum = document.createElement('span');\n                spanNum.innerText = `${++index}.`;\n                spanNum.className = 'is-size-3';\n                let spanText = document.createElement('span');\n                spanText.innerText = elem;\n                spanText.classList.add('ml-2', 'is-size-3');\n                div.appendChild(spanNum);\n                div.appendChild(spanText);\n                list.appendChild(div);\n            });\n            rotateBtn();\n        }, 1000)\n    }\n\n    const redo = () => {\n        const list = document.querySelector('#list');\n        const listBlocks = document.querySelectorAll('#list .end-elem');\n        listBlocks.forEach(element => {\n            element.classList.add('animate__animated', 'animate__fadeOutUp');\n        });\n        setTimeout(() => {\n            listBlocks.forEach(element => {\n                list.removeChild(element);\n            });\n            rotateBtn();\n        }, 1000)\n    }\n\n    return (\n        <div className=\"Home is-flex mt-6\">\n            <div className=\"columns content-center\">\n                <div className=\"column is-half-desktop\">\n                    <div className=\"is-flex in-container btn-group\">\n                        <button className=\"button btn-primary btn-add\" onClick={addToList}>Add box</button>\n                        <button className=\"button btn-secondary btn-rnd\" onClick={rndList}>Randomize</button>\n                    </div>\n                    <button className=\"button btn-secondary btn-redo is-hidden\" onClick={redo}>Retry</button>\n                    <span id=\"list\"></span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport Home from './Home';\nimport logo from './assets/randomly.svg';\n\nconst App = () => {\n  return (\n    <div className=\"App container is-fluid\">\n      <nav className=\"navbar is-flex content-center\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <img className=\"logo\" src={logo} alt=\"randomly logo\" />\n        </div>\n        <div className=\"navbar-item\">\n          <a href=\"https://github.com/alexpierola/randomly\">\n            <strong>View on GitHub</strong>\n          </a>\n        </div>\n        <div className=\"navbar-item\">\n          Made by\n          <a href=\"https://github.com/alexpierola/\">\n            <strong>&nbsp;Alex Pierola</strong>\n          </a>\n        </div>\n      </nav>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css'\nimport 'animate.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}